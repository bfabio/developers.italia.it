version: 2.1

references:
  # image_name: &image_name italia/developers.italia.it
  image:
    name: &image_name "italia/developers.italia.it"
    name_latest: &image_name_latest "italia/developers.italia.it:latest"
    name_with_tag: &image_name_with_tag "italia/developers.italia.it:${CIRCLE_SHA1}"

  docker_image: &docker_image
    docker:
      - image: *image_name_with_tag

  setup_ssh_gh_pages: &setup_ssh_gh_pages
    add_ssh_keys:
      fingerprints:
        # gh-pages deployment key from circle-ci config
        - ef:89:bb:6b:43:11:55:29:e1:8f:10:f0:fd:c8:7f:58

  publish_changes_gh_pages: &publish_changes_gh_pages
    run:
      name: publish_changes_gh_pages
      command: |
        cp -r .well-known _site/

        # Make GitHub skip its Jekyll support and serve all the files
        # we built with our own Jekyll. This includes dotfiles.
        touch _site/.nojekyll

        echo developers.italia.it > _site/CNAME
        npm run deploy -- --dotfiles --repo git@github.com:italia/developers.italia.it.git -m "Automated deployment: ${CIRCLE_SHA1} [ci skip]"

  only_master: &only_master
    filters:
      branches:
        only:
          - master

  build_test_deploy_workflow: &build_test_deploy_workflow
    jobs:
      - docker/hadolint
      - docker/publish:
          name: build_image
          image: *image_name
          cache_from: *image_name_latest
      - test:
          requires:
            - build_image
            - docker/hadolint
      - build:
          requires:
            - build_image
            - docker/hadolint

      # On commit to the master branch, deploy to gh-pages
      # and tag the Docker image with "latest".
      - deploy_gh_pages:
          requires:
            - test
            - build
          <<: *only_master
      - docker/publish:
          image: *image_name
          tag: latest
          cache_from: *image_name_with_tag
          requires:
            - test
            - build
          <<: *only_master

  # In order to use this, the integration needs to be
  # setup first under CircleCI app directory and a
  # SLACK_WEBOOK environment variable needs to be set
  # in the project settings
  notify_on_failure: &notify_on_failure
    slack/status:
      fail_only: true
      only_for_branches: master

jobs:
  build:
    <<: *docker_image
    working_directory: /usr/src/developers.italia.it
    steps:
      - run: make build
      - persist_to_workspace:
          root: /usr/src/developers.italia.it
          paths:
            - _site/
      - << : *notify_on_failure

  test:
    <<: *docker_image
    working_directory: /usr/src/developers.italia.it
    steps:
      - run: make test
      - << : *notify_on_failure

  deploy_gh_pages:
    <<: *docker_image
    working_directory: /usr/src/developers.italia.it
    steps:
      - attach_workspace:
          at: _site/
      - run: mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - << : *setup_ssh_gh_pages
      - << : *publish_changes_gh_pages
      - << : *notify_on_failure
      - store_artifacts:
          path: _site/

orbs:
  docker: circleci/docker@1.4.0
  slack: circleci/slack@3.4.2

workflows:
  # Every night, rebuild and deploy to gh-pages to make sure latest data are shown
  daily-build-and-deploy:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
    <<: *build_test_deploy_workflow

  build-test-deploy:
    <<: *build_test_deploy_workflow
